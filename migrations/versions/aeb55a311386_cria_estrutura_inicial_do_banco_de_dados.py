"""Cria estrutura inicial do banco de dados

Revision ID: aeb55a311386
Revises: 
Create Date: 2025-06-19 20:02:50.783035

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aeb55a311386'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('processo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_processo', sa.String(length=100), nullable=False),
    sa.Column('ano', sa.Integer(), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_processo', 'ano', name='_processo_numero_ano_uc')
    )
    op.create_table('unidade_saude',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome_unidade', sa.String(length=150), nullable=False),
    sa.Column('tipo_unidade', sa.String(length=50), nullable=False),
    sa.Column('endereco', sa.String(length=255), nullable=True),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('email_responsavel', sa.String(length=120), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome_unidade')
    )
    op.create_table('ata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_ata', sa.String(length=100), nullable=False),
    sa.Column('ano', sa.Integer(), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('data_assinatura', sa.DateTime(), nullable=True),
    sa.Column('data_validade', sa.DateTime(), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.Column('processo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['processo_id'], ['processo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_ata')
    )
    op.create_table('contrato',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_contrato', sa.String(length=100), nullable=False),
    sa.Column('objeto', sa.Text(), nullable=False),
    sa.Column('valor_global_contrato', sa.Float(), nullable=False),
    sa.Column('fornecedor', sa.String(length=200), nullable=True),
    sa.Column('data_assinatura_contrato', sa.DateTime(), nullable=True),
    sa.Column('data_inicio_vigencia', sa.DateTime(), nullable=True),
    sa.Column('data_fim_vigencia_original', sa.DateTime(), nullable=True),
    sa.Column('data_fim_vigencia', sa.DateTime(), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.Column('processo_id', sa.Integer(), nullable=True),
    sa.Column('unidade_saude_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['processo_id'], ['processo.id'], ),
    sa.ForeignKeyConstraint(['unidade_saude_id'], ['unidade_saude.id'], name='fk_contrato_unidade_saude_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_contrato')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('unidade_saude_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['unidade_saude_id'], ['unidade_saude.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('aditivo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contrato_id', sa.Integer(), nullable=False),
    sa.Column('numero_aditivo', sa.String(length=100), nullable=False),
    sa.Column('data_assinatura', sa.DateTime(), nullable=False),
    sa.Column('objeto', sa.Text(), nullable=True),
    sa.Column('valor_acrescimo', sa.Float(), nullable=True),
    sa.Column('prazo_adicional_dias', sa.Integer(), nullable=True),
    sa.Column('nova_data_fim_vigencia', sa.DateTime(), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contrato_id'], ['contrato.id'], name='fk_aditivo_contrato_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comentario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('commentable_id', sa.Integer(), nullable=False),
    sa.Column('commentable_type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comentario', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comentario_timestamp'), ['timestamp'], unique=False)

    op.create_table('contratinho',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_contratinho', sa.String(length=100), nullable=False),
    sa.Column('objeto', sa.Text(), nullable=True),
    sa.Column('data_emissao', sa.DateTime(), nullable=False),
    sa.Column('data_fim_vigencia', sa.DateTime(), nullable=True),
    sa.Column('favorecido', sa.String(length=200), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.Column('processo_id', sa.Integer(), nullable=True),
    sa.Column('ata_id', sa.Integer(), nullable=False),
    sa.Column('unidade_saude_id', sa.Integer(), nullable=True),
    sa.Column('valor_total_itens', sa.Float(), nullable=True),
    sa.Column('valor_total_manual', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['ata_id'], ['ata.id'], name='fk_contratinho_ata_id'),
    sa.ForeignKeyConstraint(['processo_id'], ['processo.id'], ),
    sa.ForeignKeyConstraint(['unidade_saude_id'], ['unidade_saude.id'], name='fk_contratinho_unidade_saude_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('empenho',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_empenho', sa.String(length=100), nullable=False),
    sa.Column('descricao_simples', sa.Text(), nullable=True),
    sa.Column('data_emissao', sa.DateTime(), nullable=False),
    sa.Column('favorecido', sa.String(length=200), nullable=True),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.Column('processo_id', sa.Integer(), nullable=True),
    sa.Column('ata_id', sa.Integer(), nullable=False),
    sa.Column('unidade_saude_id', sa.Integer(), nullable=True),
    sa.Column('valor_total_itens', sa.Float(), nullable=True),
    sa.Column('valor_total_manual', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['ata_id'], ['ata.id'], name='fk_empenho_ata_id'),
    sa.ForeignKeyConstraint(['processo_id'], ['processo.id'], ),
    sa.ForeignKeyConstraint(['unidade_saude_id'], ['unidade_saude.id'], name='fk_empenho_unidade_saude_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_ata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('descricao_item', sa.String(length=255), nullable=False),
    sa.Column('unidade_medida', sa.String(length=50), nullable=True),
    sa.Column('quantidade_registrada', sa.Float(), nullable=False),
    sa.Column('saldo_disponivel', sa.Float(), nullable=False),
    sa.Column('valor_unitario_registrado', sa.Float(), nullable=True),
    sa.Column('lote', sa.String(length=100), nullable=True),
    sa.Column('tipo_item', sa.String(length=50), nullable=False),
    sa.Column('ata_id', sa.Integer(), nullable=False),
    sa.Column('criado_em', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ata_id'], ['ata.id'], name='fk_itemata_ata_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_contrato',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contrato_id', sa.Integer(), nullable=False),
    sa.Column('descricao', sa.String(length=500), nullable=False),
    sa.Column('unidade_medida', sa.String(length=50), nullable=True),
    sa.Column('quantidade', sa.Float(), nullable=False),
    sa.Column('valor_unitario', sa.Float(), nullable=True),
    sa.Column('valor_total_item', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['contrato_id'], ['contrato.id'], name='fk_itemcontrato_contrato_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_log_timestamp'), ['timestamp'], unique=False)

    op.create_table('consumo_item_contratinho',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contratinho_id', sa.Integer(), nullable=False),
    sa.Column('item_ata_id', sa.Integer(), nullable=False),
    sa.Column('quantidade_consumida', sa.Float(), nullable=False),
    sa.Column('valor_unitario_no_consumo', sa.Float(), nullable=True),
    sa.Column('valor_total_consumido_item', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['contratinho_id'], ['contratinho.id'], name='fk_consumoitemcontratinho_contratinho_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_ata_id'], ['item_ata.id'], name='fk_consumoitemcontratinho_item_ata_id', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consumo_item_empenho',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empenho_id', sa.Integer(), nullable=False),
    sa.Column('item_ata_id', sa.Integer(), nullable=False),
    sa.Column('quantidade_consumida', sa.Float(), nullable=False),
    sa.Column('valor_unitario_no_consumo', sa.Float(), nullable=True),
    sa.Column('valor_total_consumido_item', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['empenho_id'], ['empenho.id'], name='fk_consumoitemempenho_empenho_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_ata_id'], ['item_ata.id'], name='fk_consumoitemempenho_item_ata_id', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cota_unidade_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_ata_id', sa.Integer(), nullable=False),
    sa.Column('unidade_saude_id', sa.Integer(), nullable=False),
    sa.Column('quantidade_prevista', sa.Float(), nullable=False),
    sa.Column('quantidade_consumida', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['item_ata_id'], ['item_ata.id'], name='fk_cota_item_ata_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unidade_saude_id'], ['unidade_saude.id'], name='fk_cota_unidade_saude_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_ata_id', 'unidade_saude_id', name='_item_unidade_uc')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cota_unidade_item')
    op.drop_table('consumo_item_empenho')
    op.drop_table('consumo_item_contratinho')
    with op.batch_alter_table('log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_log_timestamp'))

    op.drop_table('log')
    op.drop_table('item_contrato')
    op.drop_table('item_ata')
    op.drop_table('empenho')
    op.drop_table('contratinho')
    with op.batch_alter_table('comentario', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comentario_timestamp'))

    op.drop_table('comentario')
    op.drop_table('aditivo')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    op.drop_table('contrato')
    op.drop_table('ata')
    op.drop_table('unidade_saude')
    op.drop_table('processo')
    # ### end Alembic commands ###
